[{"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\index.js":"1","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\App.js":"2","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\GlobalState.js":"3","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Home\\Home.js":"4","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Login\\Login.js":"5","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Signup\\Signup.js":"6","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Nav\\Nav.js":"7","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Schedule\\Schedule.js":"8","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\reducers.js":"9","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\mutations.js":"10","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\auth.js":"11","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\queries.js":"12","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\api.js":"13","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\actions.js":"14","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Appointment\\Appointment.js":"15"},{"size":305,"mtime":1612403061638,"results":"16","hashOfConfig":"17"},{"size":2862,"mtime":1612408897208,"results":"18","hashOfConfig":"17"},{"size":496,"mtime":1612230806040,"results":"19","hashOfConfig":"17"},{"size":775,"mtime":1612409173953,"results":"20","hashOfConfig":"17"},{"size":2378,"mtime":1612408897220,"results":"21","hashOfConfig":"17"},{"size":2750,"mtime":1612408897229,"results":"22","hashOfConfig":"17"},{"size":1000,"mtime":1612396672614,"results":"23","hashOfConfig":"17"},{"size":5435,"mtime":1612408897224,"results":"24","hashOfConfig":"17"},{"size":665,"mtime":1612230806057,"results":"25","hashOfConfig":"17"},{"size":1561,"mtime":1612230806052,"results":"26","hashOfConfig":"17"},{"size":1015,"mtime":1612396672620,"results":"27","hashOfConfig":"17"},{"size":216,"mtime":1612396672622,"results":"28","hashOfConfig":"17"},{"size":1003,"mtime":1612396672607,"results":"29","hashOfConfig":"17"},{"size":162,"mtime":1612230806043,"results":"30","hashOfConfig":"17"},{"size":8116,"mtime":1612408897213,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1obd0cv",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\index.js",[],["65","66"],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\App.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\GlobalState.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Login\\Login.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Signup\\Signup.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Nav\\Nav.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Schedule\\Schedule.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\reducers.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\mutations.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\auth.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\queries.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\api.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\actions.js",[],["67","68"],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Appointment\\Appointment.js",["69"],"import React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery, /* useDisclosure */ } from '@apollo/react-hooks';\nimport { CANCEL_APPOINTMENT, CHANGE_APPOINTMENT } from \"../../utils/mutations\";\nimport { Link } from \"react-router-dom\";\nimport { Container, \n          Heading, \n          FormControl, \n          FormLabel, \n          Input, \n          Button, \n          Select, \n          Text, \n          Box, \n        Flex } from \"@chakra-ui/react\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-calendar/dist/Calendar.css';\nimport { ME } from \"../../utils/queries\";\n\n\nfunction Appointment() {\n    // defining a state for the time for the schedule\n  const [,  setStartDate] = useState(new Date());\n  const [ok, setOK] = useState(false);\n  const [deleted, setDeleted] = useState(false);\n  let email = '';\n  const {data} = useQuery(ME);\n  //let a = data.me.email;\n  console.log(data);\n    \n    // defining a custon input for the datepicker\n    const CustomInput = ({ value, onClick }) => (\n        <Input type=\"day\" placeholder=\"mm/dd/yyy\"\n                name=\"day\"\n                color=\"white\"\n                onClick={onClick}\n                onChange={handleChange}\n                value={formState.day}/>\n      ); \n\n  const [formState, setFormState] = useState({ day: '', time: ''});\n  const [isData, setIsData] = useState(false);\n\n  const [removeAppointment] = useMutation(CANCEL_APPOINTMENT);\n  const [changeAppointment] = useMutation(CHANGE_APPOINTMENT);\n \n  const [link, setLink] = useState('');\n\n  useEffect(() => {\n    if(data){\n      if(data.me.appointment[0])\n      {\n        console.log(data.me.appointment[0]);\n         setLink(data.me.appointment[0].link); \n         email = data.me.email;\n         setFormState({...formState, day: data.me.appointment[0].day, time:data.me.appointment[0].time })\n         setIsData(true);\n      }\n     \n    }\n    \n  }, [data]);\n  \n  const handleFormSubmitCancel = async event => {\n    event.preventDefault();\n\n    if(data.me.appointment[0])\n    {\n\n      try{\n        const info = await removeAppointment({\n       variables: {\n         day: formState.day, time: formState.time, link: link\n       }\n     });\n   \n     console.log(info);\n \n     }catch (e) {\n         console.log(e)\n     }\n  \n \n     /*****************************************************/\n     /**Sending the mail with nodemailer */\n \n     let response = await fetch('/mail', {\n       method: \"POST\",\n       body: JSON.stringify({\n           day: formState.day,\n           time: formState.time,\n           link: link,\n           mail: email, \n           subject: 'Appointment Canceled on '\n       }),\n       headers: {\n           Accept: 'application/json',\n           'Content-Type': 'application/json'\n         },\n     }),\n       message = await response.json();\n       console.log(message);\n         //window.location.reload('/'); // we need to make anoter component to congratule the success of the operation\n \n     /*****************************************************/\n \n     /*****************setOK all operations ok***********************/\n    \n     setDeleted(true);\n     \n     /*****************************************************/\n\n    }\n    else{\n      setDeleted(false)\n    }\n    \n  };\n\n  const handleFormSubmitUpdate = async event => {\n      event.preventDefault();\n  \n      try{\n  \n         await changeAppointment({     \n               variables: {day: formState.day, time: formState.time, link: link }    \n              })\n    /*   \n      if(data)\n           email = data.me.email; */\n  \n      }catch (e) {\n          console.log(e)\n      }\n  \n      /*****************************************************/\n      /**Sending the mail with nodemailer */\n  \n      let response = await fetch('/mail', {\n        method: \"POST\",\n        body: JSON.stringify({\n            day: formState.day,\n            time: formState.time,\n            link: link,\n            mail: email, \n            subject: 'Appointment Rescheduled on '\n        }),\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          },\n      }),\n        message = await response.json();\n        console.log(message);\n          //window.location.reload('/'); // we need to make anoter component to congratule the success of the operation\n  \n      /*****************************************************/\n  \n      /*****************setOK all operations ok***********************/\n     \n      setOK(true);\n      \n      /*****************************************************/\n    };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <Container>\n      <Heading  color=\"#faf0ca\" as=\"h2\" size=\"xl\" fontSize={{ base: \"16px\", md: \"20px\", lg: \"30px\" }} padding=\"3\">My Appointment</Heading>\n     {\n      isData ?\n        <FormControl isRequired>\n        <FormLabel color=\"#faf0ca\">Select day</FormLabel>\n        <DatePicker id=\"day\" name=\"day\"\n              dateFormat=\"MM/dd/yyyy\"\n              minDate={new Date()}\n              onChange={date => {setStartDate(date); setFormState({...formState, day: date.toLocaleDateString(\"en-US\")});}}\n              customInput={<CustomInput/>}\n          />\n        <FormLabel color=\"white\">Time (Hr)</FormLabel>\n        <Select placeholder=\"Select option\" id=\"time\" name=\"time\" defaultValue={formState.time} onChange={handleChange} focusBorderColor=\"blue\" color=\"white\" borderColor=\"blue\">\n              <option value=\"12:00pm\">12:00pm</option>\n              <option value=\"2:00pm\">2:00pm</option>\n              <option value=\"4:00pm\">4:00pm</option>\n          </Select>\n          { !ok ?\n          <Text color=\"#faf0ca\" fontSize={{ base: \"8px\", md: \"12px\", lg: \"16px\" }} py=\"3\">Link: <a href={link} target=\"_blank\" rel=\"noreferrer\">{link}</a></Text>\n              : \n              null\n          } \n           { deleted ?\n            <Box>\n              <Text  padding=\"3\"></Text>\n                <Text color=\"#faf0ca\" fontSize={{ base: \"8px\", md: \"12px\", lg: \"16px\" }}>Your Appointment has been Canceled</Text>   \n            </Box>\n            : null\n           }\n           { ok ?\n            <Box>\n              <Text  padding=\"3\"></Text>\n                <Text color=\"#faf0ca\" fontSize={{ base: \"8px\", md: \"12px\", lg: \"16px\" }}>An email was sent with the information below </Text>\n                <Box borderRadius=\"md\">\n                    <Text color=\"#faf0ca\" fontSize={{ base: \"8px\", md: \"12px\", lg: \"16px\" }}>Day: {formState.day} </Text>\n                    <Text color=\"#faf0ca\" fontSize={{ base: \"8px\", md: \"12px\", lg: \"16px\" }}>Time: {formState.time}</Text>\n                    <Text color=\"#faf0ca\" fontSize={{ base: \"8px\", md: \"12px\", lg: \"16px\" }} >Link: <a href={link} target=\"_blank\" rel=\"noreferrer\">{link}</a></Text>\n                </Box>   \n            </Box>\n            : null\n           }\n           <Flex>\n              <Box>\n                  <Button\n                      mt={4}\n                      colorScheme=\"teal\"\n                      type=\"submit\"\n                      onClick={handleFormSubmitUpdate}\n                  >\n                  Reschedule\n                  </Button>\n              </Box> \n              <Box px=\"4\">\n                  <Button\n                      mt={4}\n                      colorScheme=\"teal\"\n                      type=\"submit\"\n                      onClick={handleFormSubmitCancel}\n                  >\n                  Cancel\n                  </Button>\n              </Box>\n           </Flex>        \n        </FormControl>        \n        :\n        <Box>\n          <Text color=\"#faf0ca\" fontSize={{ base: \"8px\", md: \"12px\", lg: \"16px\" }} py=\"3\">You don't have an Appointment Registered</Text>\n          <Link to=\"/schedule\">\n          <Text color=\"#faf0ca\" fontSize={{ base: \"12px\", md: \"16px\", lg: \"18px\" }}>\n                  ← Go to Schedule\n          </Text>       \n        </Link>\n      </Box>\n    }\n       \n\n    </Container>\n\n  );\n\n}\n\nexport default Appointment;\n",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"72","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":56,"column":18,"nodeType":"78","endLine":56,"endColumn":31},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],["79"],["80"],"react-hooks/exhaustive-deps","Assignments to the 'email' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","no-global-assign","no-unsafe-negation"]