[{"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\index.js":"1","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\App.js":"2","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\GlobalState.js":"3","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Home\\Home.js":"4","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Login\\Login.js":"5","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Signup\\Signup.js":"6","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Nav\\Nav.js":"7","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Schedule\\Schedule.js":"8","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\reducers.js":"9","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\mutations.js":"10","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\auth.js":"11","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\queries.js":"12","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\api.js":"13","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\actions.js":"14"},{"size":551,"mtime":1612020661972,"results":"15","hashOfConfig":"16"},{"size":2787,"mtime":1612135378841,"results":"17","hashOfConfig":"16"},{"size":496,"mtime":1612116295752,"results":"18","hashOfConfig":"16"},{"size":672,"mtime":1612020097166,"results":"19","hashOfConfig":"16"},{"size":2378,"mtime":1612021058294,"results":"20","hashOfConfig":"16"},{"size":2750,"mtime":1612020097172,"results":"21","hashOfConfig":"16"},{"size":849,"mtime":1612020097170,"results":"22","hashOfConfig":"16"},{"size":5686,"mtime":1612229325043,"results":"23","hashOfConfig":"16"},{"size":665,"mtime":1612116295756,"results":"24","hashOfConfig":"16"},{"size":1561,"mtime":1612020328508,"results":"25","hashOfConfig":"16"},{"size":1015,"mtime":1611963770624,"results":"26","hashOfConfig":"16"},{"size":203,"mtime":1612116295754,"results":"27","hashOfConfig":"16"},{"size":1003,"mtime":1612133488964,"results":"28","hashOfConfig":"16"},{"size":162,"mtime":1612116295753,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1obd0cv",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\index.js",[],["62","63"],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\App.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\GlobalState.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Login\\Login.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Signup\\Signup.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Nav\\Nav.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\components\\Schedule\\Schedule.js",["64"],"import React, { useState } from \"react\";\nimport Calendar from 'react-calendar';\nimport { useMutation, useQuery, /* useDisclosure */ } from '@apollo/react-hooks';\n//import Auth from \"../../utils/auth\";\nimport api from \"../../api\"\nimport { ADD_APPOINTMENT } from \"../../utils/mutations\";\nimport { Container, \n          Heading, \n          FormControl, \n          FormLabel, \n          Input, \n          Button, \n          Select, \n          Text, \n          Box, } from \"@chakra-ui/react\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-calendar/dist/Calendar.css';\nimport { ME } from \"../../utils/queries\";\n\n\nfunction Schedule(props) {\n    // defining a state for the time for the schedule\n  const [startDate, setStartDate] = useState(new Date());\n  const [ok, setOK] = useState(false);\n  let email = '';\n    \n    // defining a custon input for the datepicker\n    const CustomInput = ({ value, onClick }) => (\n        <Input type=\"day\" placeholder=\"mm/dd/yyy\"\n                name=\"day\"\n                color=\"white\"\n                onClick={onClick}\n                onChange={handleChange}\n                value={value}/>\n      ); \n\n  const [formState, setFormState] = useState({ day: '', time: ''});\n\n  //calendar state\n  const [value, onChange] = useState(new Date());\n  const [addAppointment] = useMutation(ADD_APPOINTMENT);\n  const {data} = useQuery(ME);\n  const [link, setLink] = useState(null);\n\n  console.log(value);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n      /* before to save in DB we need to generate the link  */\n      api\n      .createRoom()\n      .then((room) => setLink(room.url))\n      .catch((error) => {\n        console.log('Error creating room', error);\n      });\n      //************************************************ */\n    \n    console.log(formState.day)\n    console.log(formState.time)\n    console.log(link)\n    try{\n       await addAppointment({\n      variables: {\n        day: formState.day, time: formState.time, link: link\n      }\n    });\n    \n    if(data)\n         email = data.me.email;\n        else\n        console.log('no imprime nada')\n\n    console.log(email);\n\n    }catch (e) {\n        console.log(e)\n    }\n\n\n    /*****************************************************/\n    /**Sending the mail with nodemailer */\n\n    let response = await fetch('/mail', {\n        method: \"POST\",\n        body: JSON.stringify({\n            day: formState.day,\n            time: formState.time,\n            link: link,\n            mail: email\n        }),\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          },\n      }),\n        message = await response.json();\n        console.log(message);\n        //window.location.reload('/'); // we need to make anoter component to congratule the success of the operation\n\n    /*****************************************************/\n\n    /*****************setOK all operations ok***********************/\n   \n    setOK(true);\n    \n    /*****************************************************/\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n/*     console.log(\"name \" + name);\n    console.log(\"value \" + value) */\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <Container>\n      <Heading  color=\"#faf0ca\" as=\"h2\" size=\"xl\" fontSize={{ base: \"16px\", md: \"20px\", lg: \"30px\" }} padding=\"3\">Schedule your Appointment</Heading>\n      <Calendar\n        onChange={onChange}\n        value={value}\n        minDate={new Date()}\n      />\n      <FormControl>\n              <FormLabel color=\"#faf0ca\">Select day</FormLabel>\n              <DatePicker id=\"day\" name=\"day\"\n                    dateFormat=\"MM/dd/yyyy\"\n                    selected={value}\n                    // selected={startDate}\n                    minDate={new Date()}\n                    onChange={date => {setStartDate(date); setFormState({...formState, day: date.toLocaleDateString(\"en-US\")});}}\n                    customInput={<CustomInput/>}\n                />\n              <FormLabel color=\"white\">Time (Hr)</FormLabel>\n              <Select placeholder=\"Select option\" id=\"time\" name=\"time\"  defaultValue=\"option1\" onChange={handleChange} focusBorderColor=\"blue\" color=\"white\" borderColor=\"blue\">\n                    <option value=\"12:00pm\">12:00pm</option>\n                    <option value=\"2:00pm\">2:00pm</option>\n                    <option value=\"4:00pm\">4:00pm</option>\n                </Select>\n                 { ok ?\n                  <Box>\n                    <Text  padding=\"3\"></Text>\n                      <Text color=\"#faf0ca\" fontSize={{ base: \"8px\", md: \"12px\", lg: \"16px\" }}>An email was sent with the information below </Text>\n                      <Box borderRadius=\"md\">\n                          <Text color=\"#faf0ca\" fontSize={{ base: \"8px\", md: \"12px\", lg: \"16px\" }}>Day: {formState.day} </Text>\n                          <Text color=\"#faf0ca\" fontSize={{ base: \"8px\", md: \"12px\", lg: \"16px\" }}>Time: {formState.time}</Text>\n                          <Text color=\"#faf0ca\" fontSize={{ base: \"8px\", md: \"12px\", lg: \"16px\" }} >Link: <a href={link} target=\"_blank\" rel=\"noreferrer\">{link}</a></Text>\n                      </Box>   \n                  </Box>\n                  : null\n                 }         \n            <Button\n                    mt={4}\n                    colorScheme=\"teal\"\n                    type=\"submit\"\n                    onClick={handleFormSubmit}\n            >\n                    Submit\n            </Button>\n      </FormControl> \n\n    </Container>\n\n  );\n\n}\n\nexport default Schedule;\n","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\reducers.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\mutations.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\auth.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\queries.js",[],"C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\api.js",["65"],"const newRoomEndpoint =\n  `https://api.daily.co/v1/rooms`; // API\n\n/**\n * Create a short-lived room for demo purposes.\n *\n * It uses the redirect proxy as specified in netlify.toml`\n * This will work locally if you following the Netlify specific instructions\n * in README.md\n *\n * See https://docs.daily.co/reference#create-room for more information on how\n * to use the Daily REST API to create rooms and what options are available. \n */\nasync function createRoom() {\n\n  const exp = Math.round(Date.now() / 1000) + 60 * 30; //it is just last 30 min the room... we need it last the time the meeting is set\n  const options = {\n    properties: {\n      exp: exp,\n    },\n  };\n  let response = await fetch(newRoomEndpoint, {\n    method: \"POST\",\n    body: JSON.stringify(options),\n    headers: {\n      Authorization: \"Bearer 6f137cc133efcb55ef2f00e4e042f76442ae03e2b444c89b5dbbe7376f328b22\" // that's my API key\n    },\n  }),\n    room = await response.json();\n  return room;\n\n}\n\nexport default { createRoom };\n","C:\\Users\\roger\\Desktop\\projects\\lunar-video-app\\client\\src\\utils\\actions.js",[],["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":25,"column":10,"nodeType":"74","messageId":"75","endLine":25,"endColumn":19},{"ruleId":"76","severity":1,"message":"77","line":34,"column":1,"nodeType":"78","endLine":34,"endColumn":31},{"ruleId":"68","replacedBy":"79"},{"ruleId":"70","replacedBy":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'startDate' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["81"],["82"],"no-global-assign","no-unsafe-negation"]